'use strict'

var $ = require('jquery'),
  actionBtn = require('common/actionBtn'),
  ipc = require('electron').ipcRenderer

var panel = (function () {
  
  function _render (html, data, channelInfo) {
    $('#box').append(html)
        
    var box = $('.other-box'),
      qrcodeInput = box.find('.string-input'),
      qrcodeOutput = box.find('.qrcode'),
      fileSelecter = box.find('.img-input'),
      fileOutput = box.find('.base64-output')
      
    ///////////////////qrcode
    require('common/jquery-qrcode')
    
    actionBtn.extend('refresh-qrcode', _refreshQrcode)
    actionBtn.extend('save-qrcode', _saveQrcode)
    
    function _refreshQrcode () {
      var v = qrcodeInput.val()
      if (v !== '') {
        qrcodeOutput.html('').qrcode({width: 300, height: 300, text: v})
      }
    }
    
    function _saveQrcode () {
      var canvas = qrcodeOutput.find('canvas')
      if (canvas[0]) {
        ipc.send('save-qrcode', canvas[0].toDataURL('image/png'))
      }
    }
    
    qrcodeInput.on('blur', _refreshQrcode)
    
    ///////////////////base64
    
    fileSelecter.on('change', _outputBase64)
    actionBtn.extend('copy-base64', _copyBase64)
    
    function _outputBase64 () {
      var file = fileSelecter[0].files[0]
      if (file) {
        var fr = new FileReader()
        fr.onloadend = function (d) {
          fileOutput.val(d.target.result)
        }
        fr.readAsDataURL(file)
        fr = null
      } else {
        fileOutput.val('未能正确获取图像信息。')
      }
    }
    
    function _copyBase64 () {
      var v = fileOutput.val()
      if (v !== '') {
        ipc.send('copy-text', v)
      }
    }
    
    ///////////////////item exchange
    actionBtn.extend('exchange-other-item', _exchange)
    
    function _exchange (label) {
      var label = $(label),
        p = label.parents('.item')
      if (!p.hasClass('current')) {
        box.find('.item').removeClass('current')
        p.addClass('current')
      } else {
        p.removeClass('current')
      }
    }
    
  }
  
  return {
    tpl: '<div class="other-box">\
      <div class="item current">\
        <p action="exchange-other-item" class="title action">⌦ 二维码生成</p>\
        <div class="sub-box">\
          <label><input type="text" class="string-input" placeholder="请输入字符串内容" /><button action="refresh-qrcode" class="action refresh-input">生成</button><button action="save-qrcode" class="action save-qrcode">保存</button></label>\
          <div class="qrcode"></div>\
        </div>\
      </div>\
      <div class="item">\
        <p action="exchange-other-item" class="title action">⌦ 图片 base64 生成</p>\
        <div class="sub-box">\
          <button action="copy-base64" class="action copy-base64">复制</button>\
          <label><input type="file" class="img-input" accept="*/images" placeholder="选择图片" /></label>\
          <textarea class="base64-output"></textarea>\
        </div>\
      </div>\
    </div>',
    render: _render
  }
}())

module.exports = panel