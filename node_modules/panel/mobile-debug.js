'use strict'

var $ = require('jquery'),
  actionBtn = require('common/actionBtn'),
  cfg = require('config'),
  ipc = require('electron').ipcRenderer

var panel = (function () {
  
  function _render (html, data, channelInfo) {
    $('#box').append(html)
        
    var box = $('.mobile-debug-box'),
      ipInput = box.find('#ip-ipt'),
      portInput = box.find('#port-ipt'),
      accountInput = box.find('#account-ipt'),
      openBtn = box.find('.open-btn'),
      proxyBtn = box.find('.proxy-btn'),
      proxyBox = box.find('.proxy-box'),
      debugFrame = box.find('.debug-frame'),
      isOpen = false,
      _timer = null,
      outerBox = document.getElementById('box')
      
    //初始化，填充 ip 和 port
    var data = ui.getData()['mobile-debug'],
      ip = data.ip,
      port = data.port,
      account = typeof data.account === 'undefined' ? '' : data.account
    ipInput.val(ip)
    portInput.val(port)
    accountInput.val(account)
    
    actionBtn.extend('open-mobile-debug', _switchMobileDebug)
    actionBtn.extend('open-browser', _openBrowser)
    actionBtn.extend('open-proxy', _openProxy)
    actionBtn.extend('save-proxy', _saveProxy)
    actionBtn.extend('modify-proxy', _modifyProxy)
    
    //获取本机 IP
    ipc.send('trace-ip')
    
    //对 ip 和 port 进行基本检查
    function _valid () {
      var ip = ipInput.val(),
        port = portInput.val(),
        result = false
      if ((/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/g.test(ip) || ip === 'localhost') && /^\d{1,}$/g.test(port)) {
        result = true
      }
      return result
    }
    
    //保存 ip 和 port 设置
    function _save () {
      ip = ipInput.val()
      port = portInput.val()
      account = accountInput.val()
      cfg.setData('mobile-debug', {
        ip: ip,
        port: port,
        account: account
      })
    }
    
    //打开 weinre 进程
    function _open () {
      ipc.send('run-weinre', {
        ip: ip,
        port: port,
        account: account
      })
    }
    
    function _close () {
      ipc.send('shutdown-weinre')
    }
    
    function _switchMobileDebug () {
      if (!isOpen) {
        if (_valid()) {
          _save()
          _open()
        }
      } else {
        isOpen = false
        _close()
      }
      openBtn.toggleClass('on')
    }
    
    ipc.on('weinre-on', function (e, d) {
      isOpen = true
      openBtn.addClass('on')
      debugFrame.attr('src', 'http://' + ip + ':' + port + '/client/?' + +new Date + '#' + (account || 'anonymous'))
      outerBox.addEventListener('scroll', _scroll)
    })
    
    ipc.on('weinre-off', function (e, d) {
      isOpen = false
      openBtn.removeClass('on')
      outerBox.removeEventListener('scroll', _scroll)
    })
    
    ipc.on('trace-ip', function (e, d) {
      var html = '<ul>'
      d.map(function (ip) {
        html += '<li>' + ip + '</li>'
      })
      html += '</ul>'
      box.find('.ip-list').html(html)
    })
    
    function _scroll (e) {
      e.preventDefault()
      this.scrollTop = 0
    }
    
    function _openBrowser () {
      ipc.send('open-browser', 'http://' + ip + ':' + port + '/client/#' + (account || 'anonymous'))
    }
    
    function _openProxy () {
      var port = document.getElementById('proxy-port'),
        v = port.value
      if (proxyBtn.hasClass('on')) {
        ipc.send('shutdown-proxy')
      } else {
        if (/^\d{1,}$/g.test(v)) {
          ipc.send('open-proxy', v)
        } else {
          port.value = ''
        }
      }
    }
    
    function _saveProxy () {
      var port = document.getElementById('proxy-port'),
        v = port.value
      if (/^\d{1,}$/g.test(v)) {
        ipc.send('open-proxy-force', v)
      } else {
        port.value = ''
      }
    }
    
    function _modifyProxy () {
      proxyBox.toggleClass('open')
    }
    
    ipc.on('proxy-on', function (e, d) {
      proxyBtn.addClass('on')
    })
    
    ipc.on('proxy-off', function (e, d) {
      proxyBtn.removeClass('on')
    })
  }
  
  return {
    tpl: '<div class="mobile-debug-box">\
      <div class="banner">\
        <label>IP: <input type="text" id="ip-ipt" placeholder="IP 地址" /></label><label>Port: <input type="text" id="port-ipt" placeholder="端口号" /></label><label>账号: <input type="text" id="account-ipt" placeholder="个人账号" /></label><button class="open-btn action" action="open-mobile-debug">联调</button><button class="browser-btn action" action="open-browser">浏览器中打开</button>\
      </div>\
      <div class="frame">\
        <iframe class="debug-frame"></iframe>\
      </div>\
      <div class="proxy-box"><div class="btn-box"><button class="proxy-btn action" action="open-proxy">代理</button><i class="modify-proxy action" action="modify-proxy">设置</i></div><div class="proxy-info"><p class="tip">将本机设置为代理机，<br />默认端口号：<i>9999</i></p><dl><dt>本机 IP:</dt><dd class="ip-list"></dd><dt>端口号:</dt><dd><input type="text" id="proxy-port" value="9999"/></dd></dl><div class="btn-box"><button class="save-proxy-btn action" action="save-proxy">保存</button></div></div></div>\
    </div>',
    render: _render
  }
}())

module.exports = panel