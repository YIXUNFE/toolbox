'use strict'

var $ = require('jquery'),
  cfg = require('config'),
  actionBtn = require('common/actionBtn'),
  ipc = require('electron').ipcRenderer

var tplList = {
  'left-bar': '<div class="left-bar open">\
                <div class="panel action" action="close-leftBar"></div>\
                <ul class="list">{{list}}</ul>\
                <a class="open-tip action" href="#" action="open-leftBar">展开</a>\
              </div>',
  'build': '<div class="build-box">\
              <div class="tasks"><ul class="list">{{list}}</ul></div>\
              <form class="info">\
                <label><span class="key">名称：</span><input id="name" type="text" disabled /></label>\
                <label><span class="key">执行目录：</span><input id="cwd" type="text" disabled /></label>\
                <label><span class="key">执行命令：</span><input id="cmd" type="text" disabled /></label>\
                <label><span class="key">描述：</span><textarea id="desc" disabled ></textarea></label>\
                <div class="opt">\
                  <button id="run" class="action" action="run-build" type="button">执行</button>\
                  <button id="save" class="action" action="save-build" type="button">保存</button>\
                  <span class="loading">正在保存...</span>\
                </div>\
              </form>\
              <div class="console">\
                <button class="action show-info" action="show-info">摘要/详细</button>\
                <div id="log-content" class="log-content"></div>\
              </div>\
            </div>'
}

var UI = (function () {
  var data = null,
    box = $('#box'),
    leftBar = {},
    panel = {}
  
  function replace (data, tpl) {
    var item = ''
    for (item in data) {
      tpl.replace(new RegExp('\{\{' + item + '\}\}', g), data[item])
    }
    return tpl
  }
  
  function initLeftBar () {
    var tpl = tplList['left-bar']
    
    var items = data.leftBar,
      html = ''
    items.map(function (o) {
      html += '<li class="item"><a class="menu action" href="#" data-target="' + o.initData + '" action="exchange">' + o.name + '</a></li>'
    })
    tpl = tpl.replace('{{list}}', html)
    box.append(tpl)
    
    var leftBarBox = box.find('.left-bar')
    
    //event init
    actionBtn.extend('close-leftBar', _closePanel)
    actionBtn.extend('open-leftBar', _openPanel)
    actionBtn.extend('exchange', function (btn) {
      var btn = $(btn),
        d = btn.attr('data-target')
      if (btn.hasClass('current')) {return}
      leftBarBox.find('.menu').removeClass('current')
      btn.addClass('current')
      panel.exchange(d)
    })
    
    function _closePanel () {
      //leftBarBox.removeClass('open').addClass('close')
    }
    
    function _openPanel () {
      //leftBarBox.removeClass('close').addClass('open')
    }
    
    function _select (idx) {
      var btn = leftBarBox.find('.menu').eq(idx),
        d = btn.attr('data-target')
      if (btn.hasClass('current')) {return}
      leftBarBox.find('.menu').removeClass('current')
      btn.addClass('current')
      panel.exchange(d)
    }
    
    leftBar.close = _closePanel
    leftBar.open = _openPanel
    leftBar.select = _select
    
  }
  
  function initPanel () {
    var channelInfo = {}
    
    var _renderFnList = {
      'build': function (html, data) {
        var tpl = '',
          itemObj = null,
          form = null,
          list = null,
          isSaving = false,
          scroll = require('common/scroll'),
          consoleScroller = null,
          consoleBox = null,
          listScroller = null,
          isModify = false
        data.map(function (o, i) {
          tpl += '<li><a class="item" href="#" ><span class="action select-build" action="select-build">' + o.name + '</span><i class="modify action" action="modify-build">修改</i><i class="del action" action="del-build">删除</i></a></li>'
        })
        tpl += '<li><a class="item action" action="add-build" href="#">[+]添加新任务</a></li>'
        html = html.replace('{{list}}', tpl)
        box.append(html)
        
        form = $('.build-box .info')
        list = $('.build-box .list')
        
        //init list scroll
        listScroller = scroll('.build-box .list')
        
        //init console scroll
        consoleBox = $('#log-content')
        consoleScroller = scroll(consoleBox)
        
        actionBtn.extend('select-build', _selectBuild)
        actionBtn.extend('run-build', _runBuild)
        actionBtn.extend('modify-build', _modifyForm)
        actionBtn.extend('del-build', _delBuild)
        actionBtn.extend('add-build', _addBuild)
        actionBtn.extend('save-build', _saveBuild)
        actionBtn.extend('show-info', _exchangeInfo)
        
        function _selectBuild (btn) {
          btn = $(btn)
          var p = btn.parent(),
            li = p.parent(),
            index = li.parent().find('li').index(li)
          if (!p.hasClass('current')) {
            $('.build-box .item').removeClass('current')
            p.addClass('current')
            itemObj = channelInfo['build'][index]
            _resetForm()
            _fillForm()
          }
        }
        
        function _delBuild (btn) {
          btn = $(btn)
          var p = btn.parents('li'),
            index = p.parent().find('li').index(p)
          console.log(index)  
          if (confirm('你要删除这个任务吗？')) {
            p.remove()
            data.splice(index, 1)
            _clearForm()
            _resetForm()
            _saveToFile(data)
            listScroller.update()
          }
        }
        
        function _addBuild (btn) {
          btn = $(btn)
          _clearForm()
          _modifyForm()
          $('.build-box .item').removeClass('current')
          btn.addClass('current')
        }
        
        function _saveBuild () {
          var name = form.find('#name').val()
          if (isSaving) {return}
          if (itemObj) {
            itemObj.name = name
            itemObj.cwd = form.find('#cwd').val()
            itemObj.cmd = form.find('#cmd').val()
            itemObj.desc = form.find('#desc').val()
          } else {
            data.push({
              name: name,
              cwd: form.find('#cwd').val(),
              cmd: form.find('#cmd').val(),
              desc: form.find('#desc').val()
            })
            list.find('li').last().before('<li><a class="item" href="#" ><span class="action select-build" action="select-build">' + name + '</span><i class="modify action" action="modify-build">修改</i><i class="del action" action="del-build">删除</i></a></li>')
            listScroller.update()
            
            _selectBuild($('.build-box .select-build').last())
          }
          _saveToFile(data)
          _resetForm()
        }
        
        function _resetForm () {
          isModify = false
          form.find('input, textarea').attr('disabled', 'disabled')
          form.find('#run').show()
          form.find('#save').hide()
        }
        
        function _fillForm () {
          if (!itemObj) {return}
          form.find('#name').val(itemObj.name)
          form.find('#cwd').val(itemObj.cwd)
          form.find('#cmd').val(itemObj.cmd)
          form.find('#desc').val(itemObj.desc)
        }
        
        function _clearForm () {
          itemObj = null
          form.find('#name').val('')
          form.find('#cwd').val('')
          form.find('#cmd').val('')
          form.find('#desc').val('')
        }
        
        function _modifyForm () {
          isModify = true
          form.find('input, textarea').removeAttr('disabled')
          form.find('#run').hide()
          form.find('#save').show()
        }
        
        function _runBuild () {
          if (!itemObj) {
            _output('<p class="notification">请从构建任务列表中选择一个构建任务</p>')
            return
          }
          _output('<p class="notification new-task">[' + new Date().toLocaleString() + '] 运行新任务：' + itemObj.name + '</p>')
          ipc.send('run-build', itemObj)
        }
        
        function _saveToFile (data) {
          var runBtn = form.find('#run'),
            loading = form.find('.loading')
          isSaving = true
          runBtn.attr('disabled')
          loading.show()
          cfg.setData('build', data, function () {
            isSaving = false
            runBtn.removeAttr('disabled')
            loading.hide()
          })
        }
        
        function _output (d, type) {
          if (typeof d !== 'string') {d = 'SYSTEM ERROR: ' + JSON.stringify(d)}
          var html = '<div class="task-report ' + (type || '') + '">' + d.replace(/\n/g, '<br />') + '</div>'
          consoleBox.append(html)
          consoleScroller.update().scrollToBottom()
        }
        
        function _exchangeInfo () {
          consoleBox.toggleClass('show-detail')
          consoleScroller.update()
        }
        
        panel.build = {
          output: _output
        }
      }
    }
    
    function _render (channel, html, data) {
      _renderFnList[channel](html, data)
    }
    
    function _init (channel) {
      var html = '<div class="content-panel ' + channel + '-panel">'
      html += tplList[channel]
      html += '</div>'
      channelInfo[channel] = data[channel]
      _render(channel, html, channelInfo[channel])
    }
    
    function _exchange (channel) {
      if (!channelInfo[channel]) {
        _init(channel)
      }
      
      box.find('.content-panel').hide()
      box.find('.' + channel + '-panel').show()
    }
    
    panel.exchange = _exchange
  }
  
  function _init () {
    data = cfg.getData()
    initLeftBar()
    initPanel()
    leftBar.select(0)
  }
  
  return {
    init: _init,
    leftBar: leftBar,
    panel: panel,
    getData: function () {return data}
  }
}())

module.exports = UI